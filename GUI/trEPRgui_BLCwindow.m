function varargout = trEPRgui_BLCwindow(varargin)
% TREPRGUI Brief description of GUI.
%          Comments displayed at the command line in response 
%          to the help command. 

% (Leave a blank line following the help.)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Construct the components
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Make GUI effectively a singleton
singleton = findobj('Tag','trepr_gui_BLCwindow');
if (singleton)
    figure(singleton);
    varargout{1} = singleton;
    return;
end

%  Construct the components
hMainFigure = figure('Tag','trepr_gui_BLCwindow',...
    'Visible','off',...
    'Name','trEPR GUI : Baseline Compensation (BLC) Window',...
    'Units','Pixels',...
    'Position',[30,50,950,670],...
    'Resize','off',...
    'NumberTitle','off', ...
    'Menu','none','Toolbar','none');

defaultBackground = get(hMainFigure,'Color');
guiSize = get(hMainFigure,'Position');
guiSize = guiSize([3,4]);

uicontrol('Tag','axes1_description',...
    'Style','text',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'HorizontalAlignment','Center',...
    'FontWeight','bold',...
    'Position',[50 635 425 20],...
    'String','B0 spectrum at position set by slider'...
    );

uicontrol('Tag','axes2_description',...
    'Style','text',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'HorizontalAlignment','Center',...
    'FontWeight','bold',...
    'Position',[50 375 425 20],...
    'String','Averaged B0 spectrum used to fit the baseline to'...
    );

uicontrol('Tag','axes3_description',...
    'Style','text',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'HorizontalAlignment','Center',...
    'FontWeight','bold',...
    'Position',[545 635 375 20],...
    'String','Full 2D dataset (for controlling of possible artifacts)'...
    );


% Create the main axis
hPlotAxes1 = axes(...         % the axes for plotting selected plot
    'Tag','axis1',...
	'Parent', hMainFigure, ...
    'FontUnit','Pixel','Fontsize',12,...
    'Units', 'Pixels', ...
    'Position',[20 410 455 225]);
%    'HandleVisibility','callback', ...
set(hPlotAxes1,'XLim',[1 251]);
set(hPlotAxes1,'XTickLabel',{});
set(hPlotAxes1,'YLim',[-0.545 0.545]);
set(hPlotAxes1,'YTickLabel',{});

hPlotAxes2 = axes(...         % the axes for plotting selected plot
    'Tag','axis2',...
	'Parent', hMainFigure, ...
    'FontUnit','Pixel','Fontsize',12,...
    'Units', 'Pixels', ...
    'Position',[20 260 455 115]);
%    'HandleVisibility','callback', ...
set(hPlotAxes2,'XLim',[1 251]);
set(hPlotAxes2,'YLim',[-0.545 0.545]);
set(hPlotAxes2,'YTickLabel',{});

hPlotAxes3 = axes(...         % the axes for plotting selected plot
    'Tag','axis3',...
	'Parent', hMainFigure, ...
    'FontUnit','Pixel','Fontsize',12,...
    'Units', 'Pixels', ...
    'Position',[545 260 375 375]);
%    'HandleVisibility','callback', ...
set(hPlotAxes3,'XLim',[1 4501]);
set(hPlotAxes3,'YLim',[1 251]);


hsl_v1 = uicontrol('Tag','timepoint_slider',...
    'Style', 'slider',...
	'Parent', hMainFigure, ...
    'Min',1,'Max',100,'Value',50,...
    'Position', [485 410 15 225],...
    'TooltipString','',...
    'Enable','off',...
    'Callback',{@timepoint_slider_Callback}...
    );

panel_size = 240;
guiSize = get(hMainFigure,'Position');
guiSize = guiSize([3,4]);


handle_p1 = uipanel('Tag','fitarea_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[20 90 310 140],...
    'Title','Fit area width'...
    );
uicontrol('Tag','fitarea_panel_points_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[55 95 50 20],...
    'String','Points'...
    );
uicontrol('Tag','fitarea_panel_slider_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[110 95 140 20],...
    'String','Change width'...
    );
uicontrol('Tag','fitarea_panel_pushbutton_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[255 95 40 20],...
    'String','Pick'...
    );
uicontrol('Tag','fitarea_panel_left_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 70 35 20],...
    'String','left'...
    );
uicontrol('Tag','fitarea_panel_left_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[55 70 50 25],...
    'String','10'...
    );
uicontrol('Tag','fitarea_panel_left_slider',...
    'Style', 'slider',...
	'Parent', handle_p1, ...
    'Min',1,'Max',100,'Value',50,...
    'Position', [110 70 140 20],...
    'TooltipString','',...
    'Enable','off',...
    'Callback',{@fitarea_panel_slider_Callback,'left'}...
    );
uicontrol('Tag','fitarea_panel_left_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[255 70 40 25],...
    'String','Left'...
    );
uicontrol('Tag','fitarea_panel_right_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 40 35 20],...
    'String','right'...
    );
uicontrol('Tag','fitarea_panel_right_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[55 40 50 25],...
    'String','10'...
    );
uicontrol('Tag','fitarea_panel_right_slider',...
    'Style', 'slider',...
	'Parent', handle_p1, ...
    'Min',1,'Max',100,'Value',50,...
    'Position', [110 40 140 20],...
    'TooltipString','',...
    'Enable','off',...
    'Callback',{@fitarea_panel_slider_Callback,'right'}...
    );
uicontrol('Tag','fitarea_panel_right_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[255 40 40 25],...
    'String','Right'...
    );
uicontrol('Tag','fitarea_panel_back_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 35 20],...
    'String','back'...
    );
uicontrol('Tag','fitarea_panel_back_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[55 10 50 25],...
    'String','10'...
    );
uicontrol('Tag','fitarea_panel_back_slider',...
    'Style', 'slider',...
	'Parent', handle_p1, ...
    'Min',1,'Max',100,'Value',50,...
    'Position', [110 10 140 20],...
    'TooltipString','',...
    'Enable','off',...
    'Callback',{@fitarea_panel_slider_Callback,'back'}...
    );
uicontrol('Tag','fitarea_panel_back_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[255 10 40 25],...
    'String','Back'...
    );

handle_p2 = uipanel('Tag','timepoint_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[20 20 310 60],...
    'Title','Position in time'...
    );
uicontrol('Tag','timepoint_panel_index_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 35 20],...
    'String','index'...
    );
uicontrol('Tag','timepoint_panel_index_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[55 10 60 25],...
    'String','10'...
    );
uicontrol('Tag','timepoint_panel_unit_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[120 10 35 20],...
    'String','unit'...
    );
uicontrol('Tag','timepoint_panel_unit_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[160 10 60 25],...
    'String','10'...
    );
uicontrol('Tag','timepoint_panel_maximum_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[230 10 65 25],...
    'String','Maximum',...
    'Callback',{@timepoint_panel_maximum_pushbutton_Callback}...
    );

handle_p3 = uipanel('Tag','addpoints_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[345 120 330 110],...
    'Title','Additional points in fit'...
    );
uicontrol('Tag','addpoints_panel_points_text',...
    'Style','text',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[75 65 50 20],...
    'String','Points'...
    );
uicontrol('Tag','addpoints_panel_slider_text',...
    'Style','text',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[120 65 140 20],...
    'String','Change position'...
    );
uicontrol('Tag','addpoints_panel_pushbutton_text',...
    'Style','text',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[275 65 40 20],...
    'String','Pick'...
    );
uicontrol('Tag','addpoints_panel_pt1_text',...
    'Style','text',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 40 35 20],...
    'String','Pt 1'...
    );
uicontrol('Tag','addpoints_panel_pt1_checkbox',...
    'Style','checkbox',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'Enable','on',...
    'TooltipString','Check to add additional first point for fitting',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[50 40 20 25],...
    'Callback',{@addpoints_panel_ckeckbox_Callback,1}...
    );
uicontrol('Tag','addpoints_panel_pt1_edit',...
    'Style','edit',...
    'Parent',handle_p3,...
    'BackgroundColor',[1 1 1],...
    'Enable','off',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[75 40 50 25],...
    'String','10'...
    );
uicontrol('Tag','addpoints_panel_pt1_slider',...
    'Style', 'slider',...
	'Parent', handle_p3, ...
    'Min',1,'Max',100,'Value',50,...
    'Position', [130 40 140 20],...
    'TooltipString','',...
    'Enable','off',...
    'Callback',{@addpoints_panel_slider_Callback,1}...
    );
uicontrol('Tag','addpoints_panel_pt1_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[275 40 40 25],...
    'TooltipString','Pick additional first point in axis',...
    'String','Pt 1'...
    );
uicontrol('Tag','addpoints_panel_pt2_text',...
    'Style','text',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 35 20],...
    'String','Pt 2'...
    );
uicontrol('Tag','addpoints_panel_pt2_checkbox',...
    'Style','checkbox',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'Enable','on',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'TooltipString','Check to add additional second point for fitting',...
    'Position',[50 10 20 25],...
    'Callback',{@addpoints_panel_ckeckbox_Callback,2}...
    );
uicontrol('Tag','addpoints_panel_pt2_edit',...
    'Style','edit',...
    'Parent',handle_p3,...
    'BackgroundColor',[1 1 1],...
    'Enable','off',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[75 10 50 25],...
    'TooltipString','',...
    'String','10'...
    );
uicontrol('Tag','addpoints_panel_pt2_slider',...
    'Style', 'slider',...
	'Parent', handle_p3, ...
    'Min',1,'Max',100,'Value',50,...
    'Position', [130 10 140 20],...
    'TooltipString','',...
    'Enable','off',...
    'Callback',{@addpoints_panel_slider_Callback,2}...
    );
uicontrol('Tag','addpoints_panel_pt2_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p3,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[275 10 40 25],...
    'TooltipString','Pick additional second point in axis',...
    'String','Pt 2'...
    );

handle_p4 = uipanel('Tag','fitmethod_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[345 20 330 90],...
    'Title','Fit method'...
    );
uicontrol('Tag','fitmethod_panel_method_text',...
    'Style','text',...
    'Parent',handle_p4,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 40 45 20],...
    'String','Method'...
    );
uicontrol('Tag','fitmethod_panel_method_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p4,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[70 40 250 20],...
    'TooltipString','Select fitting method',...
    'String',{'Polynomial 0th order','Polynomial 1st order',...
    'Polynomial 2nd order','Polynomial 3rd order','Polynomial 4th order'...
    'Polynomial 5th order','Polynomial 6th order','Polynomial 7th order'...
    }...
    );
uicontrol('Tag','fitmethod_panel_showparameters_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p4,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[70 10 110 25],...
    'TooltipString','Displays the fit parameters and details used for the last fit',...
    'String','Show parameters'...
    );
uicontrol('Tag','fitmethod_panel_apply_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p4,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[210 10 50 25],...
    'TooltipString','Applies the currently selected fitting to the spectrum and subtracts the baseline',...
    'String','Apply'...
    );
uicontrol('Tag','fitmethod_panel_reset_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p4,...
    'BackgroundColor',defaultBackground,...
    'Enable','inactive',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[265 10 50 25],...
    'TooltipString','Resets the currently displayed spectrum to its original form (before BLC)',...
    'String','Reset'...
    );

handle_p5 = uipanel('Tag','visible_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[guiSize(1)-panel_size-20 90 panel_size 140],...
    'Title','Visible datasets'...
    );
uicontrol('Tag','visible_panel_listbox',...
    'Style','listbox',...
    'Parent',handle_p5,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 50 panel_size(1)-20 70],...
    'TooltipString','List of currently visible spectra',...
    'String','',...
    'Callback',{@visible_panel_listbox_Callback}...
    );
uicontrol('Tag','visible_panel_previous_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p5,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[150 10 40 30],...
    'FontWeight','bold',...
    'String','<<',...
    'TooltipString','Show previous spectrum',...
    'Enable','off',...
    'Callback',{@visible_panel_pushbutton_Callback,'prev'}...
    );
uicontrol('Tag','visible_panel_next_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p5,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[190 10 40 30],...
    'FontWeight','bold',...
    'String','>>',...
    'TooltipString','Show next spectrum',...
    'Enable','off',...
    'Callback',{@visible_panel_pushbutton_Callback,'next'}...
    );

uicontrol('Tag','apply_pushbutton',...
    'Style','pushbutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'String','Apply',...
    'TooltipString','Applies the changes made to the currently visible dataset to the dataset in the main GUI',...
    'pos',[guiSize(1)-panel_size-20 20 panel_size/3 40],...
    'Enable','on'...
    );
uicontrol('Tag','discard_pushbutton',...
    'Style','pushbutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'String','Discard',...
    'TooltipString','Discards the changes made to the currently visible dataset',...
    'pos',[guiSize(1)-(panel_size/3*2)-20 20 panel_size/3 40],...
    'Enable','on'...
    );
uicontrol('Tag','close_pushbutton',...
    'Style','pushbutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','Close',...
    'TooltipString','Closes the BLC GUI',...
    'pos',[guiSize(1)-(panel_size/3)-20 20 panel_size/3 40],...
    'Enable','on',...
    'Callback',{@close_pushbutton_Callback}...
    );




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Initialization tasks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Store handles in guidata
guidata(hMainFigure,guihandles);

% Create appdata structure
ad = struct();
% data - empty cell array
ad.data = cell(0);
% origdata - empty cell array
ad.origdata = cell(0);
% configuration - struct
ad.configuration = struct();
ad.configuration.fit.area.left = 10;
ad.configuration.fit.area.right = 10;
ad.configuration.fit.area.back = 10;
ad.configuration.fit.point(1).active = false;
ad.configuration.fit.point(1).position = [];
ad.configuration.fit.point(2).active = false;
ad.configuration.fit.point(2).position = [];
% control - struct
ad.control = struct();
% control.status - empty struct
ad.control.status = cell(0);
% control.spectra - struct
ad.control.spectra = struct();
ad.control.spectra.active = 0;
ad.control.spectra.invisible = [];
ad.control.spectra.visible = [];
ad.control.spectra.modified = [];
ad.control.spectra.missing = [];
% control.axis - struct
ad.control.axis = struct();
ad.control.axis.grid = struct();
ad.control.axis.grid.zero = true;
ad.control.axis.limits = struct();
ad.control.axis.limits.auto = true;
ad.control.axis.limits.x = struct();
ad.control.axis.limits.x.min = 0;
ad.control.axis.limits.x.max = 1;
ad.control.axis.limits.y = struct();
ad.control.axis.limits.y.min = 0;
ad.control.axis.limits.y.max = 1;
ad.control.axis.limits.z = struct();
ad.control.axis.limits.z.min = 0;
ad.control.axis.limits.z.max = 1;
ad.control.axis.normalisation = 'none';

setappdata(hMainFigure,'data',ad.data);
setappdata(hMainFigure,'origdata',ad.origdata);
setappdata(hMainFigure,'configuration',ad.configuration);
setappdata(hMainFigure,'control',ad.control);

% Make the GUI visible.
set(hMainFigure,'Visible','on');

% Load data from Main GUI
mainGuiWindow = findobj('Tag','trepr_gui_mainwindow');
if (mainGuiWindow)
    admain = getappdata(mainGuiWindow);
    % Check for availability of necessary fields in appdata
    if (isfield(admain,'data') ~= 0)
        ad.data = admain.data;
        % Add BLC specific fields to each dataset
        for k = 1:length(ad.data)
            ad.data{k}.blc.fit = ad.configuration.fit;
            [y,~] = size(ad.data{k}.data);
            for l = 1:length(ad.data{k}.blc.fit.point)
                ad.data{k}.blc.fit.point(l).position = round(y/2);
            end
        end
        setappdata(hMainFigure,'data',ad.data);
        ad.origdata = admain.data;
        setappdata(hMainFigure,'origdata',ad.origdata);
    end
    if (isfield(admain,'control') ~= 0)
        ad.control = admain.control;
        setappdata(hMainFigure,'control',ad.control);
    end
    
    updateSpectra();
    update_position_display();
    update_fitarea_display();
    update_addpoint_display();
end

update_axes();

if (nargout == 1)
    varargout{1} = hMainFigure;
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Callbacks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function fitarea_panel_slider_Callback(source,~,area)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    try
        switch area
            case 'left'
                ad.data{ad.control.spectra.active}.blc.fit.area.left = ...
                    int16(get(source,'Value'));
            case 'right'
                ad.data{ad.control.spectra.active}.blc.fit.area.right = ...
                    int16(get(source,'Value'));
            case 'back'
                ad.data{ad.control.spectra.active}.blc.fit.area.back = ...
                    int16(get(source,'Value'));
        end
    catch
        disp('Something went wrong!');
    end
    
    % Set appdata from BLC GUI
    setappdata(mainWindow,'data',ad.data);
    
    update_axes();
    update_position_display();
    update_fitarea_display();
end

function addpoints_panel_ckeckbox_Callback(source,~,point)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get handles from main window
    gh = guidata(mainWindow);

    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    try
        switch point
            case 1
                if get(source,'Value')
                    set(gh.addpoints_panel_pt1_edit,'Enable','On');
                    set(gh.addpoints_panel_pt1_slider,'Enable','On');
                    %set(gh.addpoints_panel_pt1_pushbutton,'Enable','On');
                    ad.data{ad.control.spectra.active}.blc.fit.point(1).active = true;
                else
                    set(gh.addpoints_panel_pt1_edit,'Enable','Off');
                    set(gh.addpoints_panel_pt1_slider,'Enable','Off');
                    %set(gh.addpoints_panel_pt1_pushbutton,'Enable','Off');
                    ad.data{ad.control.spectra.active}.blc.fit.point(1).active = false;
                end
            case 2
                if get(source,'Value')
                    set(gh.addpoints_panel_pt2_edit,'Enable','On');
                    set(gh.addpoints_panel_pt2_slider,'Enable','On');
                    %set(gh.addpoints_panel_pt2_pushbutton,'Enable','On');
                    ad.data{ad.control.spectra.active}.blc.fit.point(2).active = true;
                else
                    set(gh.addpoints_panel_pt2_edit,'Enable','Off');
                    set(gh.addpoints_panel_pt2_slider,'Enable','Off');
                    %set(gh.addpoints_panel_pt2_pushbutton,'Enable','Off');
                    ad.data{ad.control.spectra.active}.blc.fit.point(2).active = false;
                end
        end
    catch
        disp('Something went wrong!');
    end
    
    % Set appdata from BLC GUI
    setappdata(mainWindow,'data',ad.data);
    
    update_axes();
    update_position_display();
    update_fitarea_display();
    update_addpoint_display();
end

function addpoints_panel_slider_Callback(source,~,point)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    try
        ad.data{ad.control.spectra.active}.blc.fit.point(point).position = ...
            int16(get(source,'value'));
    catch
        disp('Something went wrong!');
    end
    
    % Set appdata from BLC GUI
    setappdata(mainWindow,'data',ad.data);
    
    update_axes();
    update_position_display();
    update_fitarea_display();
    update_addpoint_display();
end

function timepoint_slider_Callback(source,~)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    try
        ad.data{ad.control.spectra.active}.display.position.x = ...
            int16(get(source,'value'));
    catch
        disp('Something went wrong!');
    end
    
    % Set appdata from BLC GUI
    setappdata(mainWindow,'data',ad.data);
    
    update_axes();
    update_position_display();
end

function timepoint_panel_maximum_pushbutton_Callback(~,~)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);
    
    try
        [~,imax] = max(max(ad.data{ad.control.spectra.active}.data));
        ad.data{ad.control.spectra.active}.display.position.x = imax;
    catch
        disp('Something went wrong!');
    end
    
    % Set appdata from BLC GUI
    setappdata(mainWindow,'data',ad.data);
    
    update_axes();
    update_position_display();
end

function visible_panel_listbox_Callback(source,~)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);
    
    try
        ad.control.spectra.active = ad.control.spectra.visible(...
            get(source,'Value')...
            );
    catch
        disp('Something went wrong!');
    end
    
    % Set appdata from BLC GUI
    setappdata(mainWindow,'control',ad.control);
    
    update_axes();
    update_position_display();
    update_fitarea_display();
    update_addpoint_display();
end


function visible_panel_pushbutton_Callback(source,~,action)
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    % Get handles of main window
    gh = guihandles(mainWindow);
    
    % This shall never happen, as the element should not be active in this
    % case
    if (length(ad.control.spectra.visible) < 2)
        return;
    end
    
    switch action
        case 'prev'
            if (ad.control.spectra.active == ad.control.spectra.visible(1))
                ad.control.spectra.active = ad.control.spectra.visible(end);
            else
                ad.control.spectra.active = ad.control.spectra.visible(...
                    find(ad.control.spectra.visible==ad.control.spectra.active)-1);
            end
        case 'next'
            if(ad.control.spectra.active == ad.control.spectra.visible(end))
                ad.control.spectra.active = ad.control.spectra.visible(1);
            else
                ad.control.spectra.active = ad.control.spectra.visible(...
                    find(ad.control.spectra.visible==ad.control.spectra.active)+1);
            end
    end
    
    set(gh.visible_panel_listbox,'Value',ad.control.spectra.active);
    
    % Update appdata of main window
    setappdata(mainWindow,'control',ad.control);
    
    update_axes();
    update_position_display();
    update_fitarea_display();
    update_addpoint_display();
end

function close_pushbutton_Callback(~,~)
    close(findobj('Tag','trepr_gui_BLCwindow'));    
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Utility functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function update_axes()
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    % Get handles from main window
    gh = guidata(mainWindow);
    
    if isempty(ad.data) || isempty(ad.control.spectra.visible)
        return;
    end
    
    try
        [y,x] = size(ad.data{ad.control.spectra.active}.data);
        backarea = ad.data{ad.control.spectra.active}.blc.fit.area.back;
        leftarea = ad.data{ad.control.spectra.active}.blc.fit.area.left;
        rightarea = ad.data{ad.control.spectra.active}.blc.fit.area.right;
        
        cla reset;
        hold on;
        % Plot 2D data
        imagesc(ad.data{ad.control.spectra.active}.data,'Parent',gh.axis3);
        % Plot red line with position in time
        plot(gh.axis3,...
            [ad.data{ad.control.spectra.active}.display.position.x ...
            ad.data{ad.control.spectra.active}.display.position.x],...
            [1,y],...
            'r-');
        hold off;
        set(gh.axis3,'XLim',[1 x]);
        set(gh.axis3,'YLim',[1 y]);
        set(gh.axis3,'YDir','normal');
        
        % Plot patch indicating the averaged area at the end of the time
        % trace
        patch([x-backarea x-backarea x x],[1 y y 1],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','m',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis3);
        % Plot patches indicating the fit areas
        patch([1 1 x x],[1 1+leftarea 1+leftarea 1],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','r',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis3);
        patch([1 1 x x],[y-rightarea y y y-rightarea],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','r',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis3);
        
        % Plot B0 spectrum at given position in time
        B0Spectrum = ad.data{ad.control.spectra.active}.data(...
            :,ad.data{ad.control.spectra.active}.display.position.x);
        plot(gh.axis1,...
            [1:1:y],...
            B0Spectrum,...
            'k-');
        set(gh.axis1,'XLim',[1 y]);
        z = [ min(min(ad.data{ad.control.spectra.active}.data)) ...
            max(max(ad.data{ad.control.spectra.active}.data)) ];
        ZLim = [z(1)-((z(2)-z(1))/10) z(2)+((z(2)-z(1))/10)];
        set(gh.axis1,'YLim',ZLim);
        set(gh.axis1,'YTickLabel',[]);
        
        % Plot patches indicating the fit areas
        patch([1 1 leftarea+1 leftarea+1],[ZLim(1) ZLim(2) ZLim(2) ZLim(1)],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','r',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis1);
        patch([y-rightarea y-rightarea y y],[ZLim(1) ZLim(2) ZLim(2) ZLim(1)],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','r',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis1);
        
        % Plot averaged B0 spectra for fitting
        meanData = mean(ad.data{ad.control.spectra.active}.data(...
            :,x-ad.data{ad.control.spectra.active}.blc.fit.area.back:x...
            ),2);
        z = [ min(meanData) max(meanData) ];
        ZLim = [z(1)-((z(2)-z(1))/10) z(2)+((z(2)-z(1))/10)];
        hold on;
        plot(gh.axis2,...
            [1:1:y],...
            meanData,...
            'k-');
        for k=1:length(ad.data{ad.control.spectra.active}.blc.fit.point)
            if (ad.data{ad.control.spectra.active}.blc.fit.point(k).active)
                line(...
                    [ ad.data{ad.control.spectra.active}.blc.fit.point(k).position ...
                    ad.data{ad.control.spectra.active}.blc.fit.point(k).position ],...
                    [ ZLim(1) ZLim(2) ],...
                    'Color','r',...
                    'Parent',gh.axis2);
            end
        end
        hold off;
        set(gh.axis2,'XLim',[1 y]);
        set(gh.axis2,'YLim',ZLim);
        set(gh.axis2,'YTickLabel',[]);
        
        % Plot patches indicating the fit areas
        patch([1 1 leftarea+1 leftarea+1],[ZLim(1) ZLim(2) ZLim(2) ZLim(1)],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','r',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis2);
        patch([y-rightarea y-rightarea y y],[ZLim(1) ZLim(2) ZLim(2) ZLim(1)],[0 0 0 0],...
            'EdgeColor','none',...
            'FaceColor','r',...
            'FaceAlpha',0.4,...
            'Parent',gh.axis2);

    catch exception
        
        disp('Something happened...');
        disp(exception);
        disp(exception.message);
        rethrow(exception)
        
    end
end

function updateSpectra()
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    if isempty(ad.data) || isempty(ad.control.spectra.visible)
        return;
    end
    
    % Get handle for visible spectra listbox
    gh = guidata(mainWindow);
    visLbox = gh.visible_panel_listbox;
    
    % Get indices of invisible spectra
    vis = ad.control.spectra.visible;
    
    % Get names for display in listbox
    labels = cell(0);
    for k=1:length(vis)
        labels{k} = ad.data{vis(k)}.label;
    end
    
    % Update status display
    set(visLbox,'String',labels);
    if (get(visLbox,'Value')>length(vis))
        set(visLbox,'Value',length(vis));
    end
    if ((get(visLbox,'Value')==0) && (length(vis)>0))
        set(visLbox,'Value',1);
    end
    
    % Highlight currently active
    if ad.control.spectra.active
        set(visLbox,'Value',find(vis==ad.control.spectra.active));
    end
    
    % Change enable status of pushbuttons and other elements
    set(gh.timepoint_panel_maximum_pushbutton,'Enable','on');
    
    % Enable previous/next buttons only if there are more than two visible
    % spectra
    if (length(vis) > 1)
        set(gh.visible_panel_previous_pushbutton,'Enable','on');
        set(gh.visible_panel_next_pushbutton,'Enable','on');
    else
        set(gh.visible_panel_previous_pushbutton,'Enable','off');
        set(gh.visible_panel_next_pushbutton,'Enable','off');
    end
        
    [y,x] = size(ad.data{ad.control.spectra.active}.data);
    % Set timepoint slider
    set(gh.timepoint_slider,'Min',1,'Max',x,...
        'Value',ad.data{ad.control.spectra.active}.display.position.x,...
        'SliderStep',[1/(x-1) 10/(x-1)],...
        'Enable','on');
    set(gh.fitarea_panel_back_slider,'Min',1,'Max',x,...
        'Value',ad.data{ad.control.spectra.active}.blc.fit.area.back,...
        'SliderStep',[1/(x-1) 10/(x-1)],...
        'Enable','on');
    set(gh.fitarea_panel_left_slider,'Min',1,'Max',y,...
        'Value',ad.data{ad.control.spectra.active}.blc.fit.area.left,...
        'SliderStep',[1/(y-1) 10/(y-1)],...
        'Enable','on');
    set(gh.fitarea_panel_right_slider,'Min',1,'Max',y,...
        'Value',ad.data{ad.control.spectra.active}.blc.fit.area.right,...
        'SliderStep',[1/(y-1) 10/(y-1)],...
        'Enable','on');
    set(gh.addpoints_panel_pt1_slider,'Min',1,'Max',y,...
        'Value',ad.data{ad.control.spectra.active}.blc.fit.point(1).position,...
        'SliderStep',[1/(y-1) 10/(y-1)]...
        );
    set(gh.addpoints_panel_pt2_slider,'Min',1,'Max',y,...
        'Value',ad.data{ad.control.spectra.active}.blc.fit.point(2).position,...
        'SliderStep',[1/(y-1) 10/(y-1)]...
        );
    
end

function update_position_display()
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    if isempty(ad.data) || isempty(ad.control.spectra.visible)
        return;
    end
    
    % Get handle for visible spectra listbox
    gh = guidata(mainWindow);

    try
        % Set position in time edit boxes
        set(gh.timepoint_panel_index_edit,...
            'String',...
            num2str(ad.data{ad.control.spectra.active}.display.position.x));
        % Set unit
        [~,x] = size(ad.data{ad.control.spectra.active}.data);
        x = linspace(1,x,x);
        if (isfield(ad.data{ad.control.spectra.active},'axes') ...
                && isfield(ad.data{ad.control.spectra.active}.axes,'x') ...
                && isfield(ad.data{ad.control.spectra.active}.axes.x,'values') ...
                && not (isempty(ad.data{ad.control.spectra.active}.axes.x.values)))
            x = ad.data{ad.control.spectra.active}.axes.x.values;
        end
        set(gh.timepoint_panel_unit_edit,...
            'String',...
            num2str(x(ad.data{ad.control.spectra.active}.display.position.x)));
        % Set slider
        set(gh.timepoint_slider,'Value',...
            ad.data{ad.control.spectra.active}.display.position.x);
    catch exception
        disp('Something went wrong...');
        disp(exception.message);
    end
end

function update_fitarea_display()
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    if isempty(ad.data) || isempty(ad.control.spectra.visible)
        return;
    end
    
    % Get handle for visible spectra listbox
    gh = guidata(mainWindow);

    try
        % Set position in edit boxes
        set(gh.fitarea_panel_left_edit,...
            'String',...
            num2str(ad.data{ad.control.spectra.active}.blc.fit.area.left));
        set(gh.fitarea_panel_right_edit,...
            'String',...
            num2str(ad.data{ad.control.spectra.active}.blc.fit.area.right));
        set(gh.fitarea_panel_back_edit,...
            'String',...
            num2str(ad.data{ad.control.spectra.active}.blc.fit.area.back));
        % Set slider
        set(gh.fitarea_panel_left_slider,'Value',...
            ad.data{ad.control.spectra.active}.blc.fit.area.left);
        set(gh.fitarea_panel_right_slider,'Value',...
            ad.data{ad.control.spectra.active}.blc.fit.area.right);
        set(gh.fitarea_panel_back_slider,'Value',...
            ad.data{ad.control.spectra.active}.blc.fit.area.back);
    catch exception
        disp('Something went wrong...');
        disp(exception.message);
    end
end

function update_addpoint_display()
    mainWindow = findobj('Tag','trepr_gui_BLCwindow');
    % Get appdata from BLC GUI
    ad = getappdata(mainWindow);

    if isempty(ad.data) || isempty(ad.control.spectra.visible)
        return;
    end
    
    % Get handle for visible spectra listbox
    gh = guidata(mainWindow);

    try
        % Set position in edit boxes
        set(gh.addpoints_panel_pt1_edit,...
            'String',...
            num2str(ad.data{ad.control.spectra.active}.blc.fit.point(1).position));
        set(gh.addpoints_panel_pt2_edit,...
            'String',...
            num2str(ad.data{ad.control.spectra.active}.blc.fit.point(2).position));
        % Set slider
        set(gh.addpoints_panel_pt1_slider,'Value',...
            ad.data{ad.control.spectra.active}.blc.fit.point(1).position);
        set(gh.addpoints_panel_pt2_slider,'Value',...
            ad.data{ad.control.spectra.active}.blc.fit.point(2).position);
    catch exception
        disp('Something went wrong...');
        disp(exception.message);
    end
end

end
