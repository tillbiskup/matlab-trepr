function handle = guiDisplayPanel(parentHandle,position)
% GUIWELCOMEPANEL Add a panel for display settings to a gui
%       Should only be called from within a GUI defining function.
%
%       Arguments: parent Handle and position vector.
%       TODO: Add guidata and appdata to list of arguments
%
%       Returns the handle of the added panel.

% (Leave a blank line following the help.)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Construct the components
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

defaultBackground = get(parentHandle,'Color');

handle = uipanel('Tag','display_panel',...
    'parent',parentHandle,...
    'Title','Display settings',...
    'FontUnit','Pixel','Fontsize',12,...
    'FontWeight','bold',...
    'BackgroundColor',defaultBackground,...
    'Visible','off',...
    'Units','pixels','Position',position);

% Create the "Display settings" panel
handle_size = get(handle,'Position');
uicontrol('Tag','display_panel_description',...
    'Style','text',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'HorizontalAlignment','Left',...
    'FontAngle','oblique',...
    'Position',[10 handle_size(4)-60 handle_size(3)-20 30],...
    'String',{'Set display (axis) properties, export graphics and 1D data, ...'}...
    );

% Create buttongroup to switch between subpanels (pages)
hpbg = uibuttongroup('Tag','display_panel_pages_buttongroup',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'BorderType','none',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 handle_size(4)-100 handle_size(3)-20 30],...
    'SelectionChangeFcn',{@pages_buttongroup_Callback}...
    );
uicontrol('Tag','display_panel_page1_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','page 1',...
    'TooltipString','Show page 1 of this panel',...
    'pos',[handle_size(3)-20-(((handle_size(3)-20)/4)*4) 0 (handle_size(3)-20)/4 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',1);
uicontrol('Tag','display_panel_page2_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','page 2',...
    'TooltipString','Show page 2 of this panel',...
    'pos',[handle_size(3)-20-(((handle_size(3)-20)/4)*3) 0 (handle_size(3)-20)/4 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',0);
uicontrol('Tag','display_panel_page3_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','page 3',...
    'TooltipString','Show page 3 of this panel',...
    'pos',[handle_size(3)-20-(((handle_size(3)-20)/4)*2) 0 (handle_size(3)-20)/4 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',0);
uicontrol('Tag','display_panel_page4_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','page 4',...
    'TooltipString','Show page 4 of this panel',...
    'pos',[handle_size(3)-20-(((handle_size(3)-20)/4)) 0 (handle_size(3)-20)/4 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',0);

% Create subpanels (pages)
handle_pp1 = uipanel('Tag','display_panel_page1_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-20 handle_size(4)-110]...
    );
handle_pp2 = uipanel('Tag','display_panel_page2_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-20 handle_size(4)-110],...
    'Visible','Off'...
    );
handle_pp3 = uipanel('Tag','display_panel_page3_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-20 handle_size(4)-110],...
    'Visible','Off'...
    );
handle_pp4 = uipanel('Tag','display_panel_page4_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-20 handle_size(4)-110],...
    'Visible','Off'...
    );

handle_p1 = uipanel('Tag','display_panel_axislabels_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-300 handle_size(3)-20 180],...
    'Title','Axis labels'...
    );
uicontrol('Tag','display_panel_axislabels_measure_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 130 (handle_size(3)-90)/2 25],...
    'String','Measure'...
    );
uicontrol('Tag','display_panel_axislabels_unit_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 130 (handle_size(3)-90)/2 25],...
    'String','Unit'...
    );
uicontrol('Tag','display_panel_axislabels_x_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 110 35 20],...
    'String','x'...
    );
uicontrol('Tag','display_panel_axislabels_x_measure_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 110 (handle_size(3)-90)/2 25],...
    'String','index',...
    'Callback',{@axislabels_edit_Callback,'xmeasure'}...
    );
uicontrol('Tag','display_panel_axislabels_x_unit_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 110 (handle_size(3)-90)/2 25],...
    'String','points',...
    'Callback',{@axislabels_edit_Callback,'xunit'}...
    );
uicontrol('Tag','display_panel_axislabels_y_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 80 35 20],...
    'String','y'...
    );
uicontrol('Tag','display_panel_axislabels_y_measure_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 80 (handle_size(3)-90)/2 25],...
    'String','index',...
    'Callback',{@axislabels_edit_Callback,'ymeasure'}...
    );
uicontrol('Tag','display_panel_axislabels_y_unit_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 80 (handle_size(3)-90)/2 25],...
    'String','points',...
    'Callback',{@axislabels_edit_Callback,'yunit'}...
    );
uicontrol('Tag','display_panel_axislabels_z_text',...
    'Style','text',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 50 35 20],...
    'String','z'...
    );
uicontrol('Tag','display_panel_axislabels_z_measure_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 50 (handle_size(3)-90)/2 25],...
    'String','index',...
    'Callback',{@axislabels_edit_Callback,'zmeasure'}...
    );
uicontrol('Tag','display_panel_axislabels_z_unit_edit',...
    'Style','edit',...
    'Parent',handle_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 50 (handle_size(3)-90)/2 25],...
    'String','points',...
    'Callback',{@axislabels_edit_Callback,'zunit'}...
    );
uicontrol('Tag','display_panel_axislabels_getfromactivedataset_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 10 handle_size(3)-90 30],...
    'String','Get from active dataset',...
    'Enable','Off',...
    'Callback',{@axislabels_getfromactivedataset_pushbutton_Callback}...
    );

handle_p2 = uipanel('Tag','display_panel_axislimits_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-480 handle_size(3)-20 170],...
    'Title','Axis limits'...
    );
uicontrol('Tag','display_panel_axislimits_min_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 120 (handle_size(3)-90)/2 25],...
    'String','min'...
    );
uicontrol('Tag','display_panel_axislimits_max_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 120 (handle_size(3)-90)/2 25],...
    'String','max'...
    );
uicontrol('Tag','display_panel_axislimits_x_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 100 35 20],...
    'String','x'...
    );
uicontrol('Tag','display_panel_axislimits_x_min_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 100 (handle_size(3)-90)/2 25],...
    'String','0',...
    'Callback',{@axislimits_edit_Callback,'xmin'}...
    );
uicontrol('Tag','display_panel_axislimits_x_max_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 100 (handle_size(3)-90)/2 25],...
    'String','1',...
    'Callback',{@axislimits_edit_Callback,'xmax'}...
    );
uicontrol('Tag','display_panel_axislimits_y_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 70 35 20],...
    'String','y'...
    );
uicontrol('Tag','display_panel_axislimits_y_min_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 70 (handle_size(3)-90)/2 25],...
    'String','0',...
    'Callback',{@axislimits_edit_Callback,'ymin'}...
    );
uicontrol('Tag','display_panel_axislimits_y_max_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 70 (handle_size(3)-90)/2 25],...
    'String','1',...
    'Callback',{@axislimits_edit_Callback,'ymax'}...
    );
uicontrol('Tag','display_panel_axislimits_z_text',...
    'Style','text',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 40 35 20],...
    'String','z'...
    );
uicontrol('Tag','display_panel_axislimits_z_min_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 40 (handle_size(3)-90)/2 25],...
    'String','-1',...
    'Callback',{@axislimits_edit_Callback,'zmin'}...
    );
uicontrol('Tag','display_panel_axislimits_z_max_edit',...
    'Style','edit',...
    'Parent',handle_p2,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(handle_size(3)-90)/2 40 (handle_size(3)-90)/2 25],...
    'String','1',...
    'Callback',{@axislimits_edit_Callback,'zmax'}...
    );
uicontrol('Tag','display_panel_axislimits_auto_checkbox',...
    'Style','checkbox',...
    'Parent',handle_p2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 10 handle_size(3)-90 20],...
    'String',' Determine automatically',...
    'Value',1,...
    'Callback',{@axislimits_auto_checkbox_Callback}...
    );

handle_p3 = uipanel('Tag','display_panel_grid_panel',...
    'Parent',handle_pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-180 handle_size(3)-20 60],...
    'Title','Grid'...
    );
uicontrol('Tag','display_panel_grid_x_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','X',...
    'TooltipString','Show grid in x',...
    'pos',[handle_size(3)-30-(((handle_size(3)-40)/4)*4) 10 (handle_size(3)-40)/4 30],...
    'parent',handle_p3,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_x_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_grid_y_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','Y',...
    'TooltipString','Show grid in y',...
    'pos',[handle_size(3)-30-(((handle_size(3)-40)/4)*3) 10 (handle_size(3)-40)/4 30],...
    'parent',handle_p3,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_y_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_grid_minor_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','minor',...
    'TooltipString','Show minor grid',...
    'pos',[handle_size(3)-30-(((handle_size(3)-40)/4)*2) 10 (handle_size(3)-40)/4 30],...
    'parent',handle_p3,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_minor_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_grid_zero_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','zero',...
    'TooltipString','Show dashed line at zero',...
    'pos',[handle_size(3)-30-(((handle_size(3)-40)/4)) 10 (handle_size(3)-40)/4 30],...
    'parent',handle_p3,...
    'HandleVisibility','off',...
    'Value',1,...
    'Callback',{@grid_zero_togglebutton_Callback}...
    );


handle_p4 = uipanel('Tag','display_panel_legend_panel',...
    'Parent',handle_pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-250 handle_size(3)-20 60],...
    'Title','Legend display and position'...
    );
uicontrol('Tag','display_panel_legend_auto_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','auto',...
    'TooltipString','Display legend automatically (in best position)',...
    'pos',[10 10 (handle_size(3)-40)/5 30],...
    'parent',handle_p4,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_legend_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_legend_nw_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','NW',...
    'TooltipString','Display legend in upper left corner',...
    'pos',[handle_size(3)-30-(((handle_size(3)-50)/5)*4) 10 (handle_size(3)-50)/5 30],...
    'parent',handle_p4,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_legend_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_legend_ne_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','NE',...
    'TooltipString','Display legend in upper right corner',...
    'pos',[handle_size(3)-30-(((handle_size(3)-50)/5)*3) 10 (handle_size(3)-50)/5 30],...
    'parent',handle_p4,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_legend_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_legend_sw_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','SW',...
    'TooltipString','Display legend in lower left corner',...
    'pos',[handle_size(3)-30-(((handle_size(3)-50)/5)*2) 10 (handle_size(3)-50)/5 30],...
    'parent',handle_p4,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_legend_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_legend_se_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','SE',...
    'TooltipString','Display legend in lower right corner',...
    'pos',[handle_size(3)-30-(((handle_size(3)-50)/5)) 10 (handle_size(3)-50)/5 30],...
    'parent',handle_p4,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@grid_legend_togglebutton_Callback}...
    );

handle_p5 = uipanel('Tag','display_panel_normalise_panel',...
    'Parent',handle_pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-320 handle_size(3)-20 60],...
    'Title','Normalise'...
    );
uicontrol('Tag','display_panel_normalise_pkpk_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','Pk-Pk = 1',...
    'TooltipString','Normalise peak-peak to 1',...
    'pos',[handle_size(3)-30-(((handle_size(3)-40)/2)*2) 10 (handle_size(3)-40)/2 30],...
    'parent',handle_p5,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@normalise_togglebutton_Callback}...
    );
uicontrol('Tag','display_panel_normalise_amplitude_togglebutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','amplitude = 1',...
    'TooltipString','Normalise amplitude to 1',...
    'pos',[handle_size(3)-30-(((handle_size(3)-40)/2)) 10 (handle_size(3)-40)/2 30],...
    'parent',handle_p5,...
    'HandleVisibility','off',...
    'Value',0,...
    'Callback',{@normalise_togglebutton_Callback}...
    );

handle_p6 = uipanel('Tag','display_panel_highlight_panel',...
    'Parent',handle_pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-450 handle_size(3)-20 120],...
    'Title','Highlight of current dataset'...
    );
uicontrol('Tag','display_panel_highlight_checkbox',...
    'Style','checkbox',...
    'Parent',handle_p6,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 75 handle_size(3)-100 20],...
    'String',' Highlight active',...
    'Value',1,...
    'Callback',{@highlight_checkbox_Callback}...
    );
uicontrol('Tag','display_panel_highlight_method_text',...
    'Style','text',...
    'Parent',handle_p6,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 40 60 20],...
    'String','Method'...
    );
uicontrol('Tag','display_panel_highlight_value_text',...
    'Style','text',...
    'Parent',handle_p6,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 60 20],...
    'String','Value'...
    );
uicontrol('Tag','display_panel_highlight_method_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p6,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 40 handle_size(3)-105 20],...
    'String','color|linewidth|linestyle|marker',...
    'Callback',{@highlight_method_popupmenu_Callback}...
    );
uicontrol('Tag','display_panel_highlight_value_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p6,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 10 handle_size(3)-105 20],...
    'String','blue|green|red|cyan|magenta|yellow|black',...
    'Callback',{@highlight_value_popupmenu_Callback}...
    );

handle_p7 = uipanel('Tag','display_panel_axesexport_panel',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-210 handle_size(3)-20 90],...
    'Title','Export figure'...
    );
uicontrol('Tag','display_panel_axesexport_description',...
    'Style','text',...
    'Parent',handle_p7,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'HorizontalAlignment','Left',...
    'FontAngle','oblique',...
    'Position',[10 40 handle_size(3)-40 20],...
    'String',{'Export current axes.'}...
    );
uicontrol('Tag','display_panel_axesexport_filetype_text',...
    'Style','text',...
    'Parent',handle_p7,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','left',...
    'Units','Pixels',...
    'Position',[10 10 60 20],...
    'String','Format'...
    );
uicontrol('Tag','display_panel_axesexport_filetype_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p7,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-190 15 100 20],...
    'String','fig|eps|pdf|png (bitmap)',...
    'TooltipString','Select type of graphics file (fig means "detach")'...
    );
uicontrol('Tag','display_panel_axesexport_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p7,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-90 10 60 30],...
    'String','Export',...
    'TooltipString','Export current axis to graphics file with given format'...
    );

handle_p8 = uipanel('Tag','display_panel_dataexport_panel',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-350 handle_size(3)-20 130],...
    'Title','Export 1D data'...
    );
uicontrol('Tag','display_panel_dataexport_description',...
    'Style','text',...
    'Parent',handle_p8,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'HorizontalAlignment','Left',...
    'FontAngle','oblique',...
    'Position',[10 80 handle_size(3)-40 20],...
    'String',{'Export currently active 1D data.'}...
    );
uicontrol('Tag','display_panel_dataexport_filetype_text',...
    'Style','text',...
    'Parent',handle_p8,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','left',...
    'Units','Pixels',...
    'Position',[10 50 150 20],...
    'String','Header starts with (%)'...
    );
uicontrol('Tag','display_panel_dataexport_header_edit',...
    'Style','edit',...
    'Parent',handle_p8,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[170 50 60 25],...
    'String','%',...
    'TooltipString','Character the header should start with'...
    );
uicontrol('Tag','display_panel_dataexport_filetype_text',...
    'Style','text',...
    'Parent',handle_p8,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','left',...
    'Units','Pixels',...
    'Position',[10 10 60 20],...
    'String','Format'...
    );
uicontrol('Tag','display_panel_dataexport_filetype_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p8,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-190 15 100 20],...
    'String','ASCII',...
    'TooltipString','Select type of graphics file (fig means "detach")'...
    );
uicontrol('Tag','display_panel_dataexport_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p8,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-90 10 60 30],...
    'String','Export',...
    'TooltipString','Export currently active dataset in current (x or y) display to file with given type'...
    );

handle_p9 = uipanel('Tag','display_panel_3Ddisplay_panel',...
    'Parent',handle_pp4,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-340 handle_size(3)-20 220],...
    'Title','3D display'...
    );
uicontrol('Tag','display_panel_3D_reducing_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlign','left',...
    'FontAngle','italic',...
    'Units','Pixels',...
    'Position',[10 170 80 20],...
    'TooltipString','Set parameters to reduce data points in x and y',...
    'String','Reducing'...
    );
uicontrol('Tag','display_panel_3D_x_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100 170 (handle_size(3)-130)/2 20],...
    'String','x'...
    );
uicontrol('Tag','display_panel_3D_y_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100+(handle_size(3)-130)/2 170 (handle_size(3)-130)/2 20],...
    'String','y'...
    );
uicontrol('Tag','display_panel_3D_factor_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlign','left',...
    'Units','Pixels',...
    'Position',[10 140 80 20],...
    'TooltipString','Factor by which to reduce the number of datapoints in x and y',...
    'String','Factor'...
    );
uicontrol('Tag','display_panel_3D_factor_x_edit',...
    'Style','edit',...
    'Parent',handle_p9,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100 140 (handle_size(3)-130)/2 25],...
    'String','1',...
    'TooltipString','Factor by which to reduce the number of datapoints in x',...
    'Callback',{@axislabels_edit_Callback,'xmeasure'}...
    );
uicontrol('Tag','display_panel_3D_factor_y_edit',...
    'Style','edit',...
    'Parent',handle_p9,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100+(handle_size(3)-130)/2 140 (handle_size(3)-130)/2 25],...
    'String','1',...
    'TooltipString','Factor by which to reduce the number of datapoints in y',...
    'Callback',{@axislabels_edit_Callback,'xunit'}...
    );
uicontrol('Tag','display_panel_3D_size_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlign','left',...
    'Units','Pixels',...
    'Position',[10 110 80 20],...
    'TooltipString','Size of dataset with current reducing factor',...
    'String','Size'...
    );
uicontrol('Tag','display_panel_3D_size_x_edit',...
    'Style','edit',...
    'Parent',handle_p9,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100 110 (handle_size(3)-130)/2 25],...
    'String','1',...
    'Enable','inactive',...
    'Callback',{@axislabels_edit_Callback,'xmeasure'}...
    );
uicontrol('Tag','display_panel_3D_size_y_edit',...
    'Style','edit',...
    'Parent',handle_p9,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100+(handle_size(3)-130)/2 110 (handle_size(3)-130)/2 25],...
    'String','1',...
    'Enable','inactive',...
    'Callback',{@axislabels_edit_Callback,'xunit'}...
    );
uicontrol('Tag','display_panel_offset_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlign','left',...
    'FontAngle','italic',...
    'Units','Pixels',...
    'Position',[10 80 80 20],...
    'TooltipString','Offset by which to shift the (reduced) data from left in x and y',...
    'String','Offset'...
    );
uicontrol('Tag','display_panel_offset_auto_checkbox',...
    'Style','checkbox',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100 80 handle_size(3)-120 20],...
    'String',' automatic',...
    'Value',1,...
    'Callback',{@highlight_checkbox_Callback}...
    );
uicontrol('Tag','display_panel_3D_offset_type_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 50 80 20],...
    'String','left|right',...
    'TooltipString','Select type of offset'...
    );
uicontrol('Tag','display_panel_3D_offset_x_edit',...
    'Style','edit',...
    'Parent',handle_p9,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100 50 (handle_size(3)-130)/2 25],...
    'String','0',...
    'TooltipString','Offset by which to shift the (reduced) data in x',...
    'Callback',{@axislabels_edit_Callback,'xmeasure'}...
    );
uicontrol('Tag','display_panel_3D_offset_y_edit',...
    'Style','edit',...
    'Parent',handle_p9,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[100+(handle_size(3)-130)/2 50 (handle_size(3)-130)/2 25],...
    'String','0',...
    'TooltipString','Offset by which to shift the (reduced) data in y',...
    'Callback',{@axislabels_edit_Callback,'xunit'}...
    );
uicontrol('Tag','display_panel_3D_display_type_text',...
    'Style','text',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','left',...
    'FontAngle','italic',...
    'Units','Pixels',...
    'Position',[10 10 60 20],...
    'String','Type'...
    );
uicontrol('Tag','display_panel_3D_display_type_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-190 15 100 20],...
    'String','surf|mesh|trisurf|trimesh',...
    'TooltipString','Select type of graphics file (fig means "detach")'...
    );
uicontrol('Tag','display_panel_3D_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p9,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-90 10 60 30],...
    'String','Show',...
    'TooltipString','Export current axis to graphics file with given format'...
    );

handle_p10 = uipanel('Tag','display_panel_gaxis_panel',...
    'Parent',handle_pp4,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[0 handle_size(4)-480 handle_size(3)-20 60],...
    'Title','g axis'...
    );

handle_p0 = uipanel('Tag','display_panel_displaytype_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-20 50],...
    'Title','Display type'...
    );
uicontrol('Tag','display_panel_displaytype_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p0,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-40 20],...
    'String','2D plot|1D along x|1D along y',...
    'Callback', {@displaytype_popupmenu_Callback}...
    );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Initialization tasks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Callbacks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function pages_buttongroup_Callback(source,~)
    try
        page_panels = [handle_pp1 handle_pp2 handle_pp3 handle_pp4];
        val = get(get(source,'SelectedObject'),'String');
        switch val
            case 'page 1'
                set(page_panels,'Visible','off');
                set(handle_pp1,'Visible','on');
            case 'page 2'
                set(page_panels,'Visible','off');
                set(handle_pp2,'Visible','on');
            case 'page 3'
                set(page_panels,'Visible','off');
                set(handle_pp3,'Visible','on');
            case 'page 4'
                set(page_panels,'Visible','off');
                set(handle_pp4,'Visible','on');
        end
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function axislabels_edit_Callback(source,~,label)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        switch label
            case 'xmeasure'
                ad.control.axis.labels.x.measure = get(source,'String');
            case 'xunit'
                ad.control.axis.labels.x.unit = get(source,'String');
            case 'ymeasure'
                ad.control.axis.labels.y.measure = get(source,'String');
            case 'yunit'
                ad.control.axis.labels.y.unit = get(source,'String');
            case 'zmeasure'
                ad.control.axis.labels.z.measure = get(source,'String');
            case 'zunit'
                ad.control.axis.labels.z.unit = get(source,'String');
            otherwise
                msgstr = { 'Unknown axis label in callback function call.' ...
                    sprintf('Function "%s" in file "%s"',...
                    'axislabels_edit_Callback',...
                    mfilename ...
                    )...
                    };
                status = add2status(msgstr);
                return;
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function axislabels_getfromactivedataset_pushbutton_Callback(~,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        if (isempty(ad.control.spectra.active))
            return;
        end
        
        if (isfield(ad.data{ad.control.spectra.active},'axes'))
            if (isfield(ad.data{ad.control.spectra.active}.axes,'x') && ...
                    isfield(ad.data{ad.control.spectra.active}.axes.x,'measure'))
                ad.control.axis.labels.x.measure = ...
                    ad.data{ad.control.spectra.active}.axes.x.measure;
            end
            if (isfield(ad.data{ad.control.spectra.active}.axes,'x') && ...
                    isfield(ad.data{ad.control.spectra.active}.axes.x,'unit'))
                ad.control.axis.labels.x.unit = ...
                    ad.data{ad.control.spectra.active}.axes.x.unit;
            end
            if (isfield(ad.data{ad.control.spectra.active}.axes,'y') && ...
                    isfield(ad.data{ad.control.spectra.active}.axes.y,'measure'))
                ad.control.axis.labels.y.measure = ...
                    ad.data{ad.control.spectra.active}.axes.y.measure;
            end
            if (isfield(ad.data{ad.control.spectra.active}.axes,'y') && ...
                    isfield(ad.data{ad.control.spectra.active}.axes.y,'unit'))
                ad.control.axis.labels.y.unit = ...
                    ad.data{ad.control.spectra.active}.axes.y.unit;
            end
            if (isfield(ad.data{ad.control.spectra.active}.axes,'z') && ...
                    isfield(ad.data{ad.control.spectra.active}.axes.z,'measure'))
                ad.control.axis.labels.z.measure = ...
                    ad.data{ad.control.spectra.active}.axes.z.measure;
            end
            if (isfield(ad.data{ad.control.spectra.active}.axes,'z') && ...
                    isfield(ad.data{ad.control.spectra.active}.axes.z,'unit'))
                ad.control.axis.labels.z.unit = ...
                    ad.data{ad.control.spectra.active}.axes.z.unit;
            end
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        % Update display panel
        update_displayPanel();
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function axislimits_edit_Callback(source,~,limit)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        switch limit
            case 'xmin'
                ad.control.axis.limits.x.min = str2num(get(source,'String'));
            case 'xmax'
                % Test whether value is larger than min for same axis
                if (str2num(get(source,'String')) > ad.control.axis.limits.x.min)
                    ad.control.axis.limits.x.max = str2num(get(source,'String'));
                else
                    set(source,'String',num2str(ad.control.axis.limits.x.max));
                    msgstr = 'Upper limit of an axis must be always bigger than lower limit.';
                    status = add2status(msgstr);
                    return;
                end
            case 'ymin'
                ad.control.axis.limits.y.min = str2num(get(source,'String'));
            case 'ymax'
                % Test whether value is larger than min for same axis
                if (str2num(get(source,'String')) > ad.control.axis.limits.y.min)
                    ad.control.axis.limits.y.max = str2num(get(source,'String'));
                else
                    set(source,'String',num2str(ad.control.axis.limits.y.max));
                    msgstr = 'Upper limit of an axis must be always bigger than lower limit.';
                    status = add2status(msgstr);
                    return;
                end
            case 'zmin'
                ad.control.axis.limits.z.min = str2num(get(source,'String'));
            case 'zmax'
                % Test whether value is larger than min for same axis
                if (str2num(get(source,'String')) > ad.control.axis.limits.z.min)
                    ad.control.axis.limits.z.max = str2num(get(source,'String'));
                else
                    set(source,'String',num2str(ad.control.axis.limits.z.max));
                    msgstr = 'Upper limit of an axis must be always bigger than lower limit.';
                    status = add2status(msgstr);
                    return;
                end
            otherwise
                msgstr = { 'Unknown axis limit in callback function call.' ...
                    sprintf('Function "%s" in file "%s"',...
                    'axislimits_edit_Callback',...
                    mfilename ...
                    )...
                    };
                status = add2status(msgstr);
                return;
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function axislimits_auto_checkbox_Callback(source,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        ad.control.axis.limits.auto = get(source,'Value');
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        % Update display panel
        update_displayPanel();
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function highlight_checkbox_Callback(source,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = guihandles(mainWindow);
        
        if (get(source,'Value'))
            set(gh.display_panel_highlight_method_popupmenu,...
                'Enable','On');
            set(gh.display_panel_highlight_value_popupmenu,...
                'Enable','On');
            highlightTypes = ...
                cellstr(get(gh.display_panel_highlight_method_popupmenu,'String'));
            highlightType = ...
                highlightTypes{get(gh.display_panel_highlight_method_popupmenu,'Value')};
            ad.control.axis.highlight.method = highlightType;
        else
            set(gh.display_panel_highlight_method_popupmenu,...
                'Enable','Off');
            set(gh.display_panel_highlight_value_popupmenu,...
                'Enable','Off');
            ad.control.axis.highlight.method = '';
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function highlight_method_popupmenu_Callback(source,eventdata)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = guihandles(mainWindow);
        
        highlightTypes = cellstr(get(source,'String'));
        highlightType = highlightTypes{get(source,'Value')};
        ad.control.axis.highlight.method = highlightType;
        
        switch highlightType
            case 'color'
                set(gh.display_panel_highlight_value_popupmenu,...
                    'String','blue|green|red|cyan|magenta|yellow|black');
                set(gh.display_panel_highlight_value_popupmenu,...
                    'Value',1);
            case 'linewidth'
                set(gh.display_panel_highlight_value_popupmenu,...
                    'String','1 px|2 px|3 px|4 px|5 px');
                set(gh.display_panel_highlight_value_popupmenu,...
                    'Value',1);
            case 'linestyle'
                set(gh.display_panel_highlight_value_popupmenu,...
                    'String','solid|dashed|dotted|dash-dotted');
                set(gh.display_panel_highlight_value_popupmenu,...
                    'Value',1);
            case 'marker'
                set(gh.display_panel_highlight_value_popupmenu,...
                    'String','plus|circle|asterisk|point|cross|square|diamond|triangle up|triangle down|triangle right|triangle left|pentagram|hexagram');
                set(gh.display_panel_highlight_value_popupmenu,...
                    'Value',1);
            otherwise
                msg = sprintf('Highlight type %s currently unsupported',highlightType);
                add2status(msg);
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        % Update highlight_value_popupmenu
        highlight_value_popupmenu_Callback(source,eventdata);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function highlight_value_popupmenu_Callback(source,eventdata)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = guihandles(mainWindow);
        
        highlightValues = ...
            cellstr(get(gh.display_panel_highlight_value_popupmenu,'String'));
        highlightValue = ...
            highlightValues{get(gh.display_panel_highlight_value_popupmenu,'Value')};
        
        highlight = struct();
        highlight.color = struct(...
            'blue','b',...
            'green','g',...
            'red','r',...
            'cyan','c',...
            'magenta','m',...
            'yellow','y',...
            'black','k');
        highlight.linewidth = struct(...
            'n1px',1,...
            'n2px',2,...
            'n3px',3,...
            'n4px',4,...
            'n5px',5);
        highlight.linestyle = struct(...
            'solid','-',...
            'dashed','--',...
            'dotted',':',...
            'dashdotted','-.');
        highlight.marker = struct(...
            'plus','+',...
            'circle','o',...
            'asterisk','*',...
            'point','.',...
            'cross','x',...
            'square','s',...
            'diamond','d',...
            'triangleup','^',...
            'triangledown','v',...
            'triangleright','>',...
            'triangleleft','<',...
            'pentagram','p',...
            'hexagram','h');
        
        ad.control.axis.highlight.value = ...
            getfield(getfield(highlight,ad.control.axis.highlight.method),...
            regexprep(strrep(strrep(highlightValue,' ',''),'-',''),'^([0-9])','n$1'));
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function grid_x_togglebutton_Callback(source,eventdata)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        if (get(source,'Value'))
            ad.control.axis.grid.x = 'on';
        else
            ad.control.axis.grid.x = 'off';
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function grid_y_togglebutton_Callback(source,eventdata)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        if (get(source,'Value'))
            ad.control.axis.grid.y = 'on';
        else
            ad.control.axis.grid.y = 'off';
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function grid_minor_togglebutton_Callback(source,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        if (get(source,'Value'))
            ad.control.axis.grid.minor = 'on';
        else
            ad.control.axis.grid.minor = 'off';
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function grid_zero_togglebutton_Callback(source,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        ad.control.axis.grid.zero = get(source,'Value');
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        % Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function grid_legend_togglebutton_Callback(source,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = guihandles(mainWindow);
        
        % For some currently unknown reason, findobj seems not to work. The
        % parent handle behaves weird...
        legendButtons = [...
            gh.display_panel_legend_auto_togglebutton ...
            gh.display_panel_legend_nw_togglebutton ...
            gh.display_panel_legend_ne_togglebutton ...
            gh.display_panel_legend_sw_togglebutton ...
            gh.display_panel_legend_se_togglebutton ...
            ];
        
        switch source
            case gh.display_panel_legend_auto_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.legend.location = 'Best';
                    set(legendButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.legend.location = 'none';
                    set(legendButtons,'Value',0);
                end
            case gh.display_panel_legend_nw_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.legend.location = 'NorthWest';
                    set(legendButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.legend.location = 'none';
                    set(legendButtons,'Value',0);
                end
            case gh.display_panel_legend_ne_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.legend.location = 'NorthEast';
                    set(legendButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.legend.location = 'none';
                    set(legendButtons,'Value',0);
                end
            case gh.display_panel_legend_sw_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.legend.location = 'SouthWest';
                    set(legendButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.legend.location = 'none';
                    set(legendButtons,'Value',0);
                end
            case gh.display_panel_legend_se_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.legend.location = 'SouthEast';
                    set(legendButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.legend.location = 'none';
                    set(legendButtons,'Value',0);
                end
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function normalise_togglebutton_Callback(source,~)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = guihandles(mainWindow);
        
        % For some currently unknown reason, findobj seems not to work. The
        % parent handle behaves weird...
        normaliseButtons = [...
            gh.display_panel_normalise_pkpk_togglebutton ...
            gh.display_panel_normalise_amplitude_togglebutton ...
            ];
        
        switch source
            case gh.display_panel_normalise_pkpk_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.normalisation = 'pkpk';
                    set(normaliseButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.normalisation = 'none';
                    set(normaliseButtons,'Value',0);
                end
            case gh.display_panel_normalise_amplitude_togglebutton
                if (get(source,'Value'))
                    ad.control.axis.normalisation = 'amplitude';
                    set(normaliseButtons,'Value',0);
                    set(source,'Value',1);
                else
                    ad.control.axis.normalisation = 'none';
                    set(normaliseButtons,'Value',0);
                end
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        %Update main axis
        update_mainAxis();
        
        %Update slider panel
        update_sliderPanel();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end


function displaytype_popupmenu_Callback(source,eventdata)
    try
        % Get appdata of main window
        mainWindow = guiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        displayTypes = cellstr(get(source,'String'));
        displayType = displayTypes{get(source,'Value')};
        ad.control.axis.displayType = displayType;
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        update_mainAxis();
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Utility functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end