function handle = panelProcessing(parentHandle,position)
% PANELPROCESSING Add a panel for general preprocessing to a gui
%       Should only be called from within a GUI defining function.
%
%       Arguments: parent Handle and position vector.
%
%       Returns the handle of the added panel.

% Copyright (c) 2011-15, Till Biskup
% 2015-10-18

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Construct the components
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

defaultBackground = get(parentHandle,'Color');

handle = uipanel('Tag','processing_panel',...
    'parent',parentHandle,...
    'Title','Data processing',...
    'FontUnit','Pixel','Fontsize',12,...
    'FontWeight','bold',...
    'BackgroundColor',defaultBackground,...
    'Visible','off',...
    'Units','pixels','Position',position);

% Create the "Processing" panel
handle_size = get(handle,'Position');

% Create buttongroup to switch between subpanels (pages)
hpbg = uibuttongroup('Tag','processing_panel_pages_buttongroup',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'BorderType','none',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 handle_size(4)-55 handle_size(3)-20 30],...
    'SelectionChangeFcn',{@pages_buttongroup_Callback}...
    );
uicontrol('Tag','processing_panel_page1_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','1',...
    'TooltipString','Page 1: POC, BGC, BLC, ACC, Scaling',...
    'pos',[0 0 (handle_size(3)-20)/3 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',1);
uicontrol('Tag','processing_panel_page2_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','2',...
    'TooltipString','Page 2: Smoothing',...
    'pos',[(((handle_size(3)-20)/3)) 0 (handle_size(3)-20)/3 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',0);
uicontrol('Tag','processing_panel_page3_pushbutton',...
    'Style','Toggle',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','3',...
    'TooltipString','Page 3: Arithmetics',...
    'pos',[(((handle_size(3)-20)/3)*2) 0 (handle_size(3)-20)/3 30],...
    'parent',hpbg,...
    'HandleVisibility','off',...
    'Value',0);

% Create subpanels (pages)
handle_pp1 = uipanel('Tag','processing_panel_page1_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[5 10 handle_size(3)-10 handle_size(4)-60]...
    );
handle_pp2 = uipanel('Tag','processing_panel_page2_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[5 10 handle_size(3)-10 handle_size(4)-60],...
    'Visible','Off'...
    );
handle_pp3 = uipanel('Tag','processing_panel_page3_panel',...
    'Parent',handle,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'BorderType','none',...
    'Units','Pixels',...
    'Position',[5 10 handle_size(3)-10 handle_size(4)-60],...
    'Visible','Off'...
    );

handle_p11 = uipanel('Tag','processing_panel_datasets_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-180 handle_size(3)-20 100],...
    'Title','Select dataset'...
    );
uicontrol('Tag','processing_panel_datasets_listbox',...
    'Style','listbox',...
    'Parent',handle_p11,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-40 70],...
    'String','',...
    'Enable','Off',...
    'Callback',{@listbox_Callback,'datasets'}...
    );

handle_p12 = uipanel('Tag','processing_panel_corrections_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-250 handle_size(3)-20 60],...
    'Title','Standard corrections'...
    );
uicontrol('Tag','processing_panel_corrections_pretrigger_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p12,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 floor((handle_size(3)-40)/2) 30],...
    'String','Offset',...
    'TooltipString','Perform pretrigger offset correction (POC)',...
    'Callback',{@corrections_pushbutton_Callback,'POC'}...
    );
uicontrol('Tag','processing_panel_corrections_background_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p12,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[floor((handle_size(3)-40)/2)+10 10 ...
    floor((handle_size(3)-40)/2) 30],...
    'String','Background',...
    'TooltipString','Perform basic background correction (BGC)',...
    'Callback',{@corrections_pushbutton_Callback,'BGC'}...
    );

handle_p13 = uipanel('Tag','processing_panel_processing_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-320 handle_size(3)-20 60],...
    'Title','Advanced corrections (dialogues)'...
    );
uicontrol('Tag','processing_panel_corrections_baseline_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p13,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 floor((handle_size(3)-40)/2) 30],...
    'String','Baseline...',...
    'TooltipString','Open baseline correction (BLC) GUI',...
    'Callback',{@corrections_pushbutton_Callback,'BLC'}...
    );
uicontrol('Tag','processing_panel_corrections_accumulate_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p13,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[floor((handle_size(3)-40)/2)+10 ...
    10 floor((handle_size(3)-40)/2) 30],...
    'String','Accumulate...',...
    'TooltipString','Open accumulation (ACC) GUI',...
    'Callback',{@corrections_pushbutton_Callback,'ACC'}...
    );

handle_p14 = uipanel('Tag','processing_panel_scaling_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-390 handle_size(3)-20 60],...
    'Title','Scaling (intensity)'...
    );
uicontrol('Tag','processing_panel_scaling_text',...
    'Style','text',...
    'Parent',handle_p14,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 12 50 20],...
    'String','Factor'...
    );
uicontrol('Tag','processing_panel_scaling_edit',...
    'Style','edit',...
    'Parent',handle_p14,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[70 12 (handle_size(3)-170) 25],...
    'String','1',...
    'Callback',{@edit_Callback,'scale'}...
    );
uicontrol('Tag','processing_panel_scaling_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p14,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-90 10 60 30],...
    'String','Scale',...
    'TooltipString',['<html>Scale dataset in z direction (intensity)'...
    '<br />by given factor</html>'],...
    'Callback',{@pushbutton_Callback,'scale'}...
    );

handle_p15 = uipanel('Tag','processing_panel_fc_panel',...
    'Parent',handle_pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-460 handle_size(3)-20 60],...
    'Title','Frequency correction'...
    );
uicontrol('Tag','processing_panel_fc_edit',...
    'Style','edit',...
    'Parent',handle_p15,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 12 70 25],...
    'String','1',...
    'Callback',{@edit_Callback,'fc'}...
    );
uicontrol('Tag','processing_panel_fc_text',...
    'Style','text',...
    'Parent',handle_p15,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[85 12 30 20],...
    'String','GHz'...
    );
uicontrol('Tag','processing_panel_fcall_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p15,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-130 10 40 30],...
    'String','All',...
    'TooltipString','Correct all datasets to given frequency',...
    'Callback',{@pushbutton_Callback,'fcall'}...
    );
uicontrol('Tag','processing_panel_fccurrent_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_p15,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[handle_size(3)-90 10 60 30],...
    'String','Current',...
    'TooltipString','Correct current dataset to given frequency',...
    'Callback',{@pushbutton_Callback,'fccurrent'}...
    );

handle_p21 = uipanel('Tag','processing_panel_datasets2_panel',...
    'Parent',handle_pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-180 handle_size(3)-20 100],...
    'Title','Select dataset'...
    );
uicontrol('Tag','processing_panel_datasets2_listbox',...
    'Style','listbox',...
    'Parent',handle_p21,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-40 70],...
    'String','',...
    'Enable','Off',...
    'Callback',{@listbox_Callback,'datasets2'}...
    );

handle_p22 = uipanel('Tag','processing_panel_smoothing_panel',...
    'Parent',handle_pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-390 handle_size(3)-20 200],...
    'Title','Smoothing (running average filter)'...
    );
uicontrol('Tag','processing_panel_smoothing_type_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 150 60 20],...
    'String','type'...
    );
uicontrol('Tag','processing_panel_smoothing_type_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 155 handle_size(3)-105 20],...
    'String','boxcar|binomial|SavitzkyGolay',...
    'Value',2,...
    'TooltipString','Choose filter type for smoothing',...
    'Callback',{@popupmenu_Callback,'smoothingType'}...
    );
uicontrol('Tag','processing_panel_smoothing_direction_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 120 65 20],...
    'String','along'...
    );
handle_p22_1 = uibuttongroup('Tag','processing_panel_smoothing_buttongroup',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 90 handle_size(3)-110 30],...
    'Title','',...
    'BorderType','none',...
    'SelectionChangeFcn',{@radiobutton_Callback,'smoothing'} ...
    );
uicontrol('Tag','processing_panel_smoothing_x_radiobutton',...
    'Style','Radiobutton',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','x (time)',...
    'TooltipString','Smooth along x (time) dimension',...
    'pos',[0 30 (handle_size(3)-110)/2 30],...
    'parent',handle_p22_1,...
    'HandleVisibility','off',...
    'Value',1 ...
    );
uicontrol('Tag','processing_panel_smoothing_y_radiobutton',...
    'Style','Radiobutton',...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','y (field)',...
    'TooltipString','Smooth along y (field) dimension',...
    'pos',[(handle_size(3)-110)/2 30 (handle_size(3)-110)/2 30],...
    'parent',handle_p22_1,...
    'HandleVisibility','off' ...
    );
uicontrol('Tag','processing_panel_smoothing_points_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 90 (handle_size(3)-110)/2 25],...
    'String','points'...
    );
uicontrol('Tag','processing_panel_smoothing_unit_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80+(handle_size(3)-110)/2 90 (handle_size(3)-110)/2 25],...
    'String','units'...
    );
uicontrol('Tag','processing_panel_smoothing_width_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 70 60 20],...
    'TooltipString',['<html>Width of the filter window.<br>'...
    'Note that the actual filter window is (2 &times; width+1)'], ...
    'String','width'...
    );
uicontrol('Tag','processing_panel_smoothing_width_points_edit',...
    'Style','edit',...
    'Parent',handle_p22,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 70 (handle_size(3)-110)/2 25],...
    'String','0',...
    'Callback',{@edit_Callback,'smoothingPoints'}...
    );
uicontrol('Tag','processing_panel_smoothing_width_unit_edit',...
    'Style','edit',...
    'Parent',handle_p22,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80+(handle_size(3)-110)/2 70 (handle_size(3)-110)/2 25],...
    'String','0',...
    'Callback',{@edit_Callback,'smoothingUnits'}...
    );
uicontrol('Tag','processing_panel_smoothing_order_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 40 60 20],...
    'String','order',...
    'TooltipString',['<html>Polynomial order<br>'...
    '(only used for Savitsky-Golay filter)'], ...
    'Enable','inactive' ...
    );
uicontrol('Tag','processing_panel_smoothing_order_edit',...
    'Style','edit',...
    'Parent',handle_p22,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 40 (handle_size(3)-110)/2 25],...
    'String','2',...
    'Enable','off',...
    'TooltipString',['<html>Polynomial order<br>'...
    '(only used for Savitsky-Golay filter)'], ...
    'Callback',{@edit_Callback,'smoothingOrder'}...
    );
uicontrol('Tag','processing_panel_smoothing_deriv_text',...
    'Style','text',...
    'Parent',handle_p22,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 60 20],...
    'String','deriv',...
    'TooltipString',['<html>Derivative order<br>'...
    '(only used for Savitsky-Golay filter)'], ...
    'Enable','inactive' ...
    );
uicontrol('Tag','processing_panel_smoothing_deriv_edit',...
    'Style','edit',...
    'Parent',handle_p22,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[80 10 (handle_size(3)-110)/2 25],...
    'String','0',...
    'Enable','off',...
    'TooltipString',['<html>Derivative order<br>'...
    '(only used for Savitsky-Golay filter)'], ...
    'Callback',{@edit_Callback,'smoothingDeriv'}...
    );


handle_p31 = uipanel('Tag','processing_panel_primary_panel',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-180 handle_size(3)-20 100],...
    'Title','Primary dataset'...
    );
uicontrol('Tag','processing_panel_primary_listbox',...
    'Style','listbox',...
    'Parent',handle_p31,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-40 70],...
    'String','',...
    'Enable','Off',...
    'Callback',{@listbox_Callback,'primary'}...
    );

uicontrol('Tag','processing_panel_function_popupmenu',...
    'Style','popupmenu',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-210 handle_size(3)-20 20],...
    'String','addition|subtraction',...
    'Value',2,...
    'TooltipString','Choose function'...
    );

handle_p32 = uipanel('Tag','processing_panel_secondary_panel',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-320 handle_size(3)-20 100],...
    'Title','Secondary dataset'...
    );
uicontrol('Tag','processing_panel_secondary_listbox',...
    'Style','listbox',...
    'Parent',handle_p32,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 handle_size(3)-40 70],...
    'String','',...
    'Enable','Off',...
    'Callback',{@listbox_Callback,'secondary'}...
    );

uicontrol('Tag','processing_panel_algebra_show_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5 handle_size(4)-360 floor((handle_size(3)-20)/3) 30],...
    'String','Show',...
    'TooltipString','Show result of arithmetics in main window',...
    'Callback',{@pushbutton_Callback,'AlgebraShow'}...
    );
uicontrol('Tag','processing_panel_algebra_discard_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5+floor((handle_size(3)-20)/3) handle_size(4)-360 ...
    floor((handle_size(3)-20)/3) 30],...
    'String','Discard',...
    'TooltipString','Discard result',...
    'Callback',{@pushbutton_Callback,'AlgebraDiscard'}...
    );
uicontrol('Tag','processing_panel_algebra_apply_pushbutton',...
    'Style','pushbutton',...
    'Parent',handle_pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[5+floor((handle_size(3)-20)/3*2) handle_size(4)-360 ...
    floor((handle_size(3)-20)/3) 30],...
    'String','Apply',...
    'TooltipString','Append result as new dataset',...
    'Callback',{@pushbutton_Callback,'AlgebraApply'}...
    );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Callbacks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function pages_buttongroup_Callback(source,~)
    try
        page_panels = [handle_pp1 handle_pp2 handle_pp3];
        switch get(get(source,'SelectedObject'),'String')
            case '1'
                set(page_panels,'Visible','off');
                set(handle_pp1,'Visible','on');
            case '2'
                set(page_panels,'Visible','off');
                set(handle_pp2,'Visible','on');
            case '3'
                set(page_panels,'Visible','off');
                set(handle_pp3,'Visible','on');
        end
        update_processingPanel();
        update_visibleSpectra();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

function pushbutton_Callback(~,~,action)
    try
        % Get appdata of main window
        mainWindow = trEPRguiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = ad.guiHandles;
        
        active = ad.control.data.active;
        
        if isempty(active) || ~active
            return;
        end
        
        switch lower(action)
            case 'algebrashow'
                % Get primary and secondary dataset
                primary = ad.control.data.visible(...
                    get(gh.processing_panel_primary_listbox,'Value'));
                secondary = ad.control.data.visible(...
                    get(gh.processing_panel_secondary_listbox,'Value'));
                % Get operation
                operations = cellstr(...
                    get(gh.processing_panel_function_popupmenu,'String'));
                operation = operations{...
                    get(gh.processing_panel_function_popupmenu,'Value')};
                % Set "temporary" structure in appdata
                ad.control.data.temporary.visible = true;
                ad.control.data.temporary.function = 'trEPRalgebra';
                ad.control.data.temporary.datasets = [primary secondary];
                ad.control.data.temporary.parameters.operation = ...
                    operation;
                setappdata(mainWindow,'control',ad.control);
                update_mainAxis();
            case 'algebradiscard'
                guiDataStructure = trEPRguiDataStructure();
                ad.control.data.temporary = ...
                    guiDataStructure.control.data.temporary;
                setappdata(mainWindow,'control',ad.control);
                update_mainAxis();
            case 'algebraapply'
                % Get primary and secondary dataset
                primary = ad.control.data.visible(...
                    get(gh.processing_panel_primary_listbox,'Value'));
                secondary = ad.control.data.visible(...
                    get(gh.processing_panel_secondary_listbox,'Value'));
                % Get operation
                operations = cellstr(...
                    get(gh.processing_panel_function_popupmenu,'String'));
                operation = operations{...
                    get(gh.processing_panel_function_popupmenu,'Value')};
                
                [resdata,warnings] = trEPRalgebra(...
                    ad.data([primary,secondary]),operation);
                if ~isempty(warnings)
                    trEPRmsg(warnings,'warning');
                end
                % If result is not empty, assign
                if ~isempty(resdata)
                    trEPRappendDatasetToMainGUI(resdata,'modified',true);
                    update_visibleSpectra();
                    update_processingPanel();
                    update_mainAxis();
                end
            case 'scale'
                scalingFactor = str2double(get(...
                    gh.processing_panel_scaling_edit,'String'));
                if scalingFactor == 1
                    return;
                end
                [resdata,warnings] = trEPRalgebra(...
                    ad.data(active),'scaling',scalingFactor);
                % If result is not empty, assign
                if ~isempty(resdata)
                    ad.data{active} = resdata;
                    if ~any(ad.control.data.modified==active)
                        ad.control.data.modified(end+1) = active;
                    end
                    setappdata(mainWindow,'data',ad.data);
                    setappdata(mainWindow,'control',ad.control);
                    update_visibleSpectra();
                    update_processingPanel();
                    update_mainAxis();
                else
                    trEPRmsg(warnings,'warning');
                end
            case 'fcall'
                mwfc = get(gh.processing_panel_fc_edit,'String');
                cmdFc(mainWindow,{'all',mwfc});
            case 'fccurrent'
                mwfc = get(gh.processing_panel_fc_edit,'String');
                cmdFc(mainWindow,{mwfc});
            otherwise
                trEPRoptionUnknown(action);
                return;
        end
        
        % Update visible spectra listbox
        update_visibleSpectra();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

function corrections_pushbutton_Callback(~,~,correction)
    try
        % Get appdata of main window
        mainWindow = trEPRguiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % If no dataset is selected
        if isempty(ad.control.data.active) || ...
                (ad.control.data.active == 0)
            return;
        end
        
        switch correction
            case 'POC'
                guiProcessingPOC(ad.control.data.active);
            case 'BGC'
                guiProcessingBGC(ad.control.data.active);
            case 'ACC'
                trEPRgui_ACCwindow();
            case 'BLC'
                trEPRgui_BLCwindow();
            otherwise
                trEPRoptionUnknown(correction);
        end
        
        % Update visible spectra listbox
        update_visibleSpectra();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

function listbox_Callback(~,~,action)
    try
        % Get appdata of main window
        mainWindow = trEPRguiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = ad.guiHandles;
        
        switch action
            case 'datasets'
                ad.control.data.active = ad.control.data.visible(...
                    get(gh.processing_panel_datasets_listbox,'Value')...
                    );
            case 'datasets2'
                ad.control.data.active = ad.control.data.visible(...
                    get(gh.processing_panel_datasets2_listbox,'Value')...
                    );
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'control',ad.control);
        
        % If user double clicked on list entry
        if strcmp(get(gcf,'SelectionType'),'open')
            cmdLabel(mainWindow,{});
        end
        
        % Update processing panel
        update_processingPanel();
        
        % Update slider panel
        update_sliderPanel();
        
        % Update visible spectra listboxes (in diverse panels!)
        update_visibleSpectra();
        
        %Update main axis
        update_mainAxis();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

function edit_Callback(source,~,action)
    try
        % Get appdata of main window
        mainWindow = trEPRguiGetWindowHandle;
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = ad.guiHandles;
        
        active = ad.control.data.active;
        if isempty(active) || ~active
            return;
        end

        % If value is empty or NaN after conversion to numeric, restore
        % previous entry and return
        if isempty(get(source,'String'))
            % Update slider panel
            update_processingPanel();
            return;
        end
        
        [y,x] = size(ad.data{active}.data);
        
        filterTypes = cellstr(...
            get(gh.processing_panel_smoothing_type_popupmenu,'String'));
        filterType = filterTypes{...
            get(gh.processing_panel_smoothing_type_popupmenu,'Value')};
        
        filterDirection = get(get(gh.processing_panel_smoothing_buttongroup,...
            'SelectedObject'),'String');
        switch filterDirection(1)
            case 'x'
                filterDirection = 1;
            case 'y'
                filterDirection = 2;
        end
        
        switch action
            case 'smoothingPoints'
                if filterDirection == 1 && x>1
                    value = trEPRguiSanitiseNumericInput(...
                        get(source,'String'),0:x-1,'map',true);
                elseif filterDirection == 2 && y>1
                    value = trEPRguiSanitiseNumericInput(...
                        get(source,'String'),0:y-1,'map',true);
                else
                    value = 0;
                end
                
                if isnan(value)
                    update_processingPanel();
                    return;
                end
                ad.data{active}.display.smoothing.data(...
                    filterDirection).parameters.width = value;
                ad.data{active}.display.smoothing.data(...
                    filterDirection).filterfun = ...
                    sprintf('trEPRfilter_%s',filterType);
            case 'smoothingUnits'
                if strcmpi(filterDirection,'x') && x>1
                    deltaUnit = diff(ad.data{active}.axes.data(1).values(1:2));
                    value = trEPRguiSanitiseNumericInput(...
                        get(source,'String'),...
                        0:deltaUnit:(x-1)*deltaUnit,...
                        'map',true);
                elseif strcmpi(filterDirection,'y') && y>1
                    deltaUnit = diff(ad.data{active}.axes.data(2).values(1:2));
                    value = trEPRguiSanitiseNumericInput(...
                        get(source,'String'),...
                        0:deltaUnit:(y-1)*deltaUnit,...
                        'map',true);
                else
                    value = 0;
                    deltaUnit = 1;
                end
                
                if isnan(value)
                    update_processingPanel();
                    return;
                end
                
                ad.data{active}.display.smoothing.data(...
                    filterDirection).parameters.width = value/deltaUnit;
                ad.data{active}.display.smoothing.data(...
                    filterDirection).filterfun = ...
                    sprintf('trEPRfilter_%s',filterType);
            case 'smoothingOrder'
                ad.data{active}.display.smoothing.data(...
                    filterDirection).parameters.order = ...
                    abs(trEPRguiSanitiseNumericInput(...
                    get(source,'String'),0:100,'round',true));
            case 'smoothingDeriv'
                ad.data{active}.display.smoothing.data(...
                    filterDirection).parameters.deriv = ...
                    abs(trEPRguiSanitiseNumericInput(...
                    get(source,'String'),0:100,'round',true));
            case 'scale'
                value = trEPRguiSanitiseNumericInput(get(source,'String'));
                if isnan(value)
                    set(source,'String','1');
%                     update_processingPanel();
                    return;
                end
                set(source,'String',num2str(value));
                pushbutton_Callback([],[],'scale');
                return;
            case 'fc'
                value = trEPRguiSanitiseNumericInput(get(source,'String'));
                if isnan(value)
                    update_processingPanel();
                    return;
                end
                set(source,'String',num2str(value));
            otherwise
                trEPRoptionUnknown(action);
                return;
        end
        
        % Update appdata of main window
        setappdata(mainWindow,'data',ad.data);
        
        % Update processing panel
        update_processingPanel();
        
        % Update slider panel
        update_sliderPanel();
        
        % Update visible spectra listboxes (in diverse panels!)
        update_visibleSpectra();
        
        %Update main axis
        update_mainAxis();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

function popupmenu_Callback(source,~,action)
    try
        if isempty(action)
            return;
        end
        
        % Get appdata and handles of main GUI
        mainWindow = trEPRguiGetWindowHandle();
        ad = getappdata(mainWindow);
        gh = ad.guiHandles;

        values = cellstr(get(source,'String'));
        value = values{get(source,'Value')};
        
        active = ad.control.data.active;
        
        switch action
            case 'smoothingType'
                % Get direction along which to smooth
                direction = get(get(...
                    gh.processing_panel_smoothing_buttongroup,...
                    'SelectedObject'),'String');
                switch direction(1)
                    case 'x'
                        direction = 1;
                    case 'y'
                        direction = 2;
                end
                ad.data{active}.display.smoothing.data(...
                    direction).filterfun = ...
                    sprintf('trEPRfilter_%s',value);
            otherwise
                trEPRoptionUnknown(action);
                return;
        end
        setappdata(mainWindow,'data',ad.data);
        % Update display panel
        update_processingPanel();
        % Update main axis
        update_mainAxis();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

function radiobutton_Callback(~,~,action)
    try
        if isempty(action)
            return;
        end
        
        switch lower(action)
            case 'smoothing'
            otherwise
                trEPRoptionUnknown(action);
                return;
        end
        
        %Update processing panel
        update_processingPanel();
    catch exception
        trEPRexceptionHandling(exception)
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Utility functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end
